==================
Add integer module
==================

This module defines the ``add_integer(a, b=98)`` function.

Usage
======

``add_integer(...)`` returns the sums of two args.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(7, 8)
    15

::

    >>> add_integer(-2, 5)
    3

Test floating-point values
============================
::

    >>> add_integer(3.0, 3.0)
    6

::

    >>> add_integer(4.1, 3.9)
    8

::
    >>> add_integer(-3.2, -2.8)
    -6

Test floating and non-floating point values
===========================================
::

    >>> add_integer(2.3, -3)
    -1

Test default arg `b`
====================
::

    >>> add_integer(12)
    110

Test type error on first arg
============================
::

    >>> add_integer("Hello", "Jasper")
    Traceback (most recent call last)
    TypeError: a must be an integer

Test NaN (Non-numbers)
======================
::

    >>> add_integer("jasper", 9)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(6, "Carter")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(7, float('nan'):
    Traceback (most recent call last)
    ValueError: cannot convert float NaN to integer

Test large numbers
==================
::
  
    >>> add_integer(2**31, 1):
    Traceback (most recent call last):
    OverflowError: integer addition overflows
