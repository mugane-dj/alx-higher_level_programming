==================
Add integer module
==================

This module defines the ``add_integer(a, b=98)`` function.

Usage
======

``add_integer(...)`` returns the sums of two args.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(7, 8)
    15

::

    >>> add_integer(-2, 5)
    3

Test floating-point values
============================
::

    >>> add_integer(3.0, 3.0)
    6

::

    >>> add_integer(4.1, 3.9)
    7

::
    >>> add_integer(-3.2, -2.8)
    -5

Test floating and non-floating point values
===========================================
::

    >>> add_integer(2.3, -3)
    -1

Test default arg `b`
====================
::

    >>> add_integer(12)
    110

Test NaN (Non-numbers)
======================
::

    >>> add_integer("jasper", 9)
    Traceback (most recent call last):
	...
    TypeError: a must be an integer

::

    >>> add_integer(6, "Carter")
    Traceback (most recent call last):
	...
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
	...
    TypeError: a must be an integer

::


   >>> add_integer(9, float('NaN'))
   Traceback (most recent call last):
   ...
   ValueError: cannot convert float NaN to integer

Test overflow
=============

	>>> add_integer(16, float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

::

Test extra argument
===================
	>>> add_integer(1, 2, 3)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

::
